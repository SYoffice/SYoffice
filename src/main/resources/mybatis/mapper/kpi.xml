<?xml version="1.0" encoding="UTF-8"?>

<!-- ==== mapper 기본설정 ==== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.syoffice.app.kpi.model.KpiDAO">

	<!-- === 목표 실적액 등록하기 === -->	
	<insert id="kpiRegister" parameterType="KpiVO">
		INSERT INTO tbl_kpi (kpi_no, fk_dept_id, kpi_year, kpi_quarter, kpi_index)
		VALUES (kpi_seq.nextval, to_number(#{fk_dept_id}), to_number(#{kpi_year}), to_number(#{kpi_quarter}), to_number(#{kpi_index}))
	</insert>
	
	<!-- === 특정 부서의 목표실적 가져오기 === -->
	<select id="getDeptKpi" parameterType="HashMap" resultType="KpiVO">
		SELECT B.kpi_no, B.fk_dept_id, B.kpi_year, B.kpi_quarter, B.kpi_index
			 , B.dept_name, B.manager_id, B.branch_name , nvl(A.sum_result_price, 0) AS sum_result_price
			 , nvl(round(A.sum_result_price / B.kpi_index * 100, 2), 0) AS result_pct
		  FROM 
			(
			SELECT fk_kpi_no, sum(result_price) AS sum_result_price
			  FROM tbl_result
			GROUP BY fk_kpi_no
			) A RIGHT JOIN 
			(
			SELECT DISTINCT V.kpi_no, V.fk_dept_id, V.kpi_year, V.kpi_quarter, V.kpi_index
				 , V.dept_name, V.manager_id, b.branch_name
			  FROM 
				(
				SELECT k.kpi_no, k.fk_dept_id, k.kpi_year, k.kpi_quarter, k.kpi_index
					 , d.dept_name, nvl(d.manager_id, -1) AS manager_id
				  FROM tbl_kpi k JOIN tbl_department d
				    ON k.fk_dept_id = d.dept_id
				 WHERE fk_dept_id = #{fk_dept_id} AND kpi_year = #{searchYear}
				) V
			  JOIN tbl_employee e
			    ON V.fk_dept_id = e.fk_dept_id
			  JOIN tbl_branch b ON e.fk_branch_no = b.branch_no
			) B
			 ON A.fk_kpi_no = B.kpi_no
		ORDER BY B.kpi_year DESC, B.kpi_quarter ASC
	</select>
	
	<!-- === 기존에 등록한 목표가 있는지 확인하기 === -->
	<select id="getExistKpi" parameterType="KpiVO" resultType="Integer">
		SELECT count(*)
		  FROM tbl_kpi
		 WHERE fk_dept_id = #{fk_dept_id} AND kpi_year = #{kpi_year} AND kpi_quarter = #{kpi_quarter}
	</select>
	
	<!-- === 목표실적 삭제 === -->
	<delete id="kpiDelete" parameterType="String">
		DELETE FROM tbl_kpi
 		 WHERE kpi_no = #{kpi_no}
	</delete>
	
	<!-- === 한개의 목표실적 가져오기 === -->
	<select id="getKpiOne" parameterType="String" resultType="KpiVO">
		SELECT kpi_no, fk_dept_id, kpi_year, kpi_quarter, kpi_index
		  FROM tbl_kpi
		 WHERE kpi_no = #{kpi_no}
	</select>
	
	
	<!-- === 목표실적 수정 === -->
	<update id="editKpi" parameterType="KpiVO">
		UPDATE tbl_kpi SET kpi_year = #{kpi_year}, kpi_quarter = #{kpi_quarter}, kpi_index = #{kpi_index}
 		 WHERE kpi_no = #{kpi_no}
	</update>
	
	
	<!-- === 실적입력을 위한 목표실적 번호 채번 === -->
	<select id="getKpi_no" parameterType="HashMap" resultType="String">
		SELECT kpi_no
		  FROM tbl_kpi
		 WHERE fk_dept_id = #{fk_dept_id} AND kpi_year = #{kpi_year} AND kpi_quarter = #{kpi_quarter}
	</select>
	
	<!-- === 엑셀파일을 통한 실적 입력 === -->
	<insert id="add_resultList" parameterType="HashMap">
		INSERT INTO tbl_result (result_no, fk_emp_id, result_name, result_date, result_price, fk_kpi_no)
		VALUES (result_seq.nextval, to_number(#{fk_emp_id}), #{result_name}, to_date(#{result_date},'yyyy-mm-dd'), to_number(#{result_price}), to_number(#{fk_kpi_no}))
	</insert>
	
	
	<!-- === 연도, 분기별 부서원 실적 정보 === -->
	<select id="getResultBydeptKpi" parameterType="HashMap" resultType="ResultVO">
		SELECT b.branch_name, d.dept_name, A.fk_emp_id, A.name, g.grade_name, A.result_name
			 , A.result_date, A.result_price, k.kpi_year, k.kpi_quarter, A.fk_branch_no,  A.fk_dept_id
		  FROM 
			(
			SELECT r.fk_emp_id, e.name, e.fk_dept_id, e.fk_grade_no, e.fk_branch_no
				 , r.fk_kpi_no, to_char(r.result_date, 'yyyy-mm-dd') AS result_date, r.result_price, r.result_name
			  FROM 
				(
				SELECT emp_id, name, fk_dept_id, fk_grade_no, fk_branch_no
				  FROM tbl_employee
				 WHERE 1=1
				   AND fk_dept_id = #{fk_dept_id}
				) e JOIN tbl_result r
				ON e.emp_id = r.fk_emp_id
			) A JOIN tbl_kpi k
			ON A.fk_kpi_no = k.kpi_no
		  JOIN tbl_department d
		    ON A.fk_dept_id = d.dept_id
		  JOIN tbl_branch b
		    ON A.fk_branch_no = b.branch_no
		  JOIN tbl_grade g
		    ON A.fk_grade_no = g.grade_no
		 WHERE 1=1
		 	<choose>
		 		<when test="kpi_year != ''">
		 			AND k.kpi_year = #{kpi_year}
		 		</when>
		 		<when test="kpi_quarter != ''">
					AND k.kpi_quarter = #{kpi_quarter}		 		
		 		</when>
		 		<otherwise></otherwise>
		 	</choose>
		ORDER BY k.kpi_year DESC, k.kpi_quarter ASC, b.branch_no ASC, A.fk_dept_id ASC, g.grade_no ASC, A.name ASC, A.result_date DESC
	</select>
	
</mapper>